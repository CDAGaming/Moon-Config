group projectGroup
version projectVersion
description "$projectDescription - $name module"

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'java'
sourceCompatibility = javaVersion
archivesBaseName = "nightconfig-$name"

repositories {
	mavenCentral()
}

dependencies {
	compile project(':core')
	compile "com.typesafe:config:$typesafeConfigVersion"
	testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
	testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

// Jar files
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.java.srcDirs
}

task fatJar(type: Jar) {
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			pom {
				name = "NightConfig ${project.name}".toString()
				description = project.description
				url = projectUrl
				developers {
					developer {
						id = 'TheElectronWill'
						url = 'https://github.com/TheElectronWill'
					}
				}
				licenses {
					license {
						name = projectLicense
						url = projectLicenseUrl
					}
				}
				scm {
					url = projectWebScm
					connection = projectScm
					developerConnection = projectScm
				}
			}
		}
	}
	repositories {
		maven {
			credentials {
				username ossrhUser
				password ossrhPassword
			}
			url project.version.endsWith('SNAPSHOT') ? publishSnapshotUrl : publishReleaseUrl
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
